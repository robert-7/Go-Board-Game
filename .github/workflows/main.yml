# This is a basic workflow to help you get started with Actions
name: markdown-lint

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a few jobs called "markdown-lint"

  # The first job is called "markdown-lint"
  markdown-lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # We usually want to check out the code as the first step in a Github Job
      - name: Check out code
        uses: actions/checkout@v2

      # We run the Markdown Linting Action as seen here:
      # https://github.com/marketplace/actions/markdown-linting-action
      - name: Markdown Linting Action
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          config: '.markdownlint.yaml'
          args: './README.md'

  # The second job is called "cpp-lint"
  cpp-lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # We usually want to check out the code as the first step in a Github Job
      - name: Check out code
        uses: actions/checkout@v2

      # We run the C++ code linter (clang-tidy and cppcheck) as seen here:
      # https://github.com/marketplace/actions/c-code-linter-clang-tidy-and-cppcheck
      - name: C++ Linting Action
        # uses: ArtificialAmateur/clang-tidy-action@master
        # uses: smay1613/clang-tidy-action@master
        uses: HorstBaerbel/action-clang-tidy@1.1
    # env:
    #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
